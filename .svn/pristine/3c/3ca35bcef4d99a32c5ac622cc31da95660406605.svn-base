package com.ncu.txw.mysite.handler;

import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ncu.txw.mysite.entities.Pet;
import com.ncu.txw.mysite.entities.User;
import com.ncu.txw.mysite.services.PetService;
import com.ncu.txw.mysite.services.UserService;

//@SessionAttributes(value={"user"}, types={User.class})
@Controller
public class Handler{
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private PetService petService;
	
	@RequestMapping("/do/register")
	public String doRegister(@RequestParam("userName") String userName,
			@RequestParam("password") String password,
			@RequestParam("email") String email){
		User user = new User(null, userName, password, email);
		userService.save(user);
		return "index";
	}
	
	@ResponseBody
	@RequestMapping(value="/ajaxValidateUserName", method=RequestMethod.POST)
	public String validateLastName(@RequestParam(value="userName", required=true) String userName){
		User user = userService.getByUserName(userName);
		if(user == null){
			return "0";
		}else{
			return "1";
		}
	}
	
	@RequestMapping("/register")
	public String Register(){
		return "register";
	}
	
	@RequestMapping("/login")
	public String Login(@RequestParam(value="pageNo", required=false, defaultValue="1") String pageNoStr,
			@RequestParam(name="userName", required=false) String userName,
			@RequestParam(name="password", required=false) String password, 
			Map<String, Object> map,
			HttpSession session){
		if(session.getAttribute("user") == null || 
			(!((User)session.getAttribute("user")).getUserName().equals(userName) && 
					!((User)session.getAttribute("user")).getUserName().equals(""))){
			
			User user = userService.getByUserName(userName);
			if(user == null || !user.getPassword().equals(password)){
				return "index";
			}
			session.setAttribute("user", user);
		}

		int pageNo = 1;
		
		try {
			pageNo = Integer.parseInt(pageNoStr);
			if(pageNo < 1){
				pageNo = 1;
			}
		} catch (Exception e) {}
		
		Page<Pet> page  = petService.getPage(pageNo, 5);
		map.put("page", page);
		return "list";
	}
	
}
